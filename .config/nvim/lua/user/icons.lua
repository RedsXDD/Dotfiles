local M = {}

if vim.env.DISPLAY ~= nil then
	M.icons = {
		misc = { dots = "󰇘" },
		gitsigns = {
			add = "▎",
			change = "▎",
			delete = "",
			topdelete = "",
			changedelete = "▎",
			untracked = "▎",
		},
		dap = {
			Stopped             = { "󰁕 ", "DiagnosticWarn", "DapStoppedLine" },
			Breakpoint          = " ",
			BreakpointCondition = " ",
			BreakpointRejected  = { " ", "DiagnosticError" },
			LogPoint            = ".>",
		},
		diagnostics = {
			Error = " ",
			Warn  = " ",
			Hint  = " ",
			Info  = " ",
		},
		git = {
			added    = " ",
			modified = " ",
			removed  = " ",
		},
		kinds = {
			Array         = " ",
			Boolean       = "󰨙 ",
			Class         = " ",
			Codeium       = "󰘦 ",
			Color         = "󰏘 ",
			Control       = " ",
			Collapsed     = " ",
			Constant      = "󰏿 ",
			Constructor   = " ",
			Copilot       = " ",
			Enum          = " ",
			EnumMember    = " ",
			Event         = " ",
			Field         = " ",
			File          = "󰈙 ",
			Folder        = " ",
			Function      = "󰊕 ",
			Interface     = " ",
			Key           = " ",
			Keyword       = "󰌋 ",
			Method        = "󰊕 ",
			Module        = " ",
			Namespace     = "󰦮 ",
			Null          = " ",
			Number        = "󰎠 ",
			Object        = " ",
			Operator      = " ",
			Package       = " ",
			Property      = "󰜢 ",
			Reference     = " ",
			Snippet       = " ",
			String        = " ",
			Struct        = "󰆼 ",
			TabNine       = "󰏚 ",
			Text          = " ",
			TypeParameter = " ",
			Unit          = "󰑭 ",
			Value         = " ",
			Variable      = "󰀫 ",
		},
	}
else
	M.icons = {
		misc = { dots = "..." },
		gitsigns = {
			add = "+",
			change = "~",
			delete = "-",
			topdelete = "^",
			changedelete = "<",
			untracked = "?",
		},
		dap = {
			Stopped             = { "-", "DiagnosticWarn", "DapStoppedLine" },
			Breakpoint          = "*",
			BreakpointCondition = "?",
			BreakpointRejected  = { "!", "DiagnosticError" },
			LogPoint            = ".>",
		},
		diagnostics = {
			Error = "E",
			Warn  = "W",
			Hint  = "H",
			Info  = "I",
		},
		git = {
			added    = "A",
			modified = "M",
			removed  = "R",
		},
		kinds = {
			Array         = "Array",
			Boolean       = "Boolean",
			Class         = "Class",
			Codeium       = "Codeium",
			Color         = "Color",
			Control       = "Control",
			Collapsed     = "Collapsed",
			Constant      = "Constant",
			Constructor   = "Constructor",
			Copilot       = "Copilot",
			Enum          = "Enum",
			EnumMember    = "EnumMember",
			Event         = "Event",
			Field         = "Field",
			File          = "File",
			Folder        = "Folder",
			Function      = "Function",
			Interface     = "Interface",
			Key           = "Key",
			Keyword       = "Keyword",
			Method        = "Method",
			Module        = "Module",
			Namespace     = "Namespace",
			Null          = "Null",
			Number        = "Number",
			Object        = "Object",
			Operator      = "Operator",
			Package       = "Package",
			Property      = "Property",
			Reference     = "Reference",
			Snippet       = "Snippet",
			String        = "String",
			Struct        = "Struct",
			TabNine       = "TabNine",
			Text          = "Text",
			TypeParameter = "TypeParameter",
			Unit          = "Unit",
			Value         = "Value",
			Variable      = "Variable",
		},
	}
end

return M
