# -------------------------- #

# ██╗   ██╗ █████╗ ███████╗██╗
# ╚██╗ ██╔╝██╔══██╗╚══███╔╝██║
#  ╚████╔╝ ███████║  ███╔╝ ██║
#   ╚██╔╝  ██╔══██║ ███╔╝  ██║
#    ██║   ██║  ██║███████╗██║
#    ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝

# -------------------------- #

[manager]
ratio          = [ 1, 3, 4 ]
sort_by        = "natural"
sort_sensitive = false
sort_reverse   = false
sort_dir_first = true
linemode       = "size"
show_hidden    = true
show_symlink   = true
scrolloff      = 8

[preview]
tab_size        = 2
max_width       = 1000
max_height      = 900
cache_dir       = "~/.cache/yazi"
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[opener]
edit = [ { run = '${EDITOR:=vi} "$@"', desc = "$EDITOR", block = true, for = "unix" } ]
open = [ { run = 'xdg-open "$@"',      desc = "Open",                  for = "linux" } ]
reveal = [
	{ run = 'xdg-open "$(dirname "$0")"',            desc = "Reveal", for = "linux" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
	{ run = 'unar "$1"', desc = "Extract here", for = "unix" },
]
play = [
	{ run = 'mpv "$@"', orphan = true, for = "unix" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
	{ name = "*/",               use = [ "edit", "open", "reveal" ] },
	{ mime = "text/*",           use = [ "edit", "reveal" ] },
	{ mime = "inode/x-empty",    use = [ "edit", "reveal" ] },
	{ mime = "application/json", use = [ "edit", "reveal" ] },
	{ mime = "*/javascript",     use = [ "edit", "reveal" ] },

	{ mime = "image/*",         use = [ "open", "reveal" ] },
	{ mime = "{audio,video}/*", use = [ "play", "reveal" ] },

	{ mime = "application/*zip", use = [ "extract", "reveal" ] },
	{ mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = [ "extract", "reveal" ] },

	{ mime = "*", use = [ "open", "reveal" ] },
]

[tasks]
micro_workers    = 10
macro_workers    = 25
bizarre_retry    = 5
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false

[plugin]
preloaders = [
	{ name = "*", cond = "!mime", run = "mime", multi = true, prio = "high" },

	# Image
	{ mime = "image/*", run = "image" },

	# Video
	{ mime = "video/*", run = "video" },

	# PDF
	{ mime = "application/pdf", run = "pdf" },
]
prepend_previewers = [
	{ name = "*.md", run = "glow" },
	{ mime = "application/*zip",                               run = "ouch" },
	{ mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", run = "ouch" },
	{ mime = "application/x-bittorrent", run = "torrent-preview" },
]
previewers = [
	{ name = "*/", run = "folder", sync = true },

	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,x-wine-extension-ini}", run = "code" },

	# JSON
	{ mime = "application/json", run = "json" },

	# Image
	{ mime = "image/vnd.djvu", run = "noop" },
	{ mime = "image/*",        run = "image" },

	# Video
	{ mime = "video/*", run = "video" },

	# PDF
	{ mime = "application/pdf", run = "pdf" },

	# Fallback
	{ name = "*", run = "file" },
]

[input]
# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

# create
create_title  = "Create:"
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]

# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

# trash
trash_title 	= "Are you sure you want to move {n} selected file{s} to trash? (y/N)"
trash_origin	= "top-center"
trash_offset	= [ 0, 2, 63, 3 ]

# delete
delete_title 	= "Are you REALLY SURE you want to PERMANENTLY delete {n} selected file{s}? (y/N)"
delete_origin	= "top-center"
delete_offset	= [ 0, 2, 75, 3 ]

# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

# search
search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

# overwrite
overwrite_title  = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [ 0, 2, 50, 3 ]

# quit
quit_title  = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [ 0, 2, 50, 3 ]

[select]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]
sort_by        = "none"
sort_sensitive = false
sort_reverse   = false

[log]
enabled = false

[headsup]
