# vim:fileencoding=utf-8:foldmethod=marker:foldenable

#: Manager {{{
[manager]
keymap = [
	#: General {{{
	{ on = [ "q" ],     run = "quit",               desc = "Exit the process." },
	{ on = [ "Q" ],     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file." },
	{ on = [ "<C-q>" ], run = "close",              desc = "Close the current tab, or quit if it is last tab." },
	{ on = [ "<C-z>" ], run = "suspend",            desc = "Suspend the process." },
	{ on = [ "<C-s>" ], run = 'shell "STARSHIP_CONFIG=$HOME/.config/starship.toml $SHELL" --block --confirm', desc = "Open shell here." },
	{ on = [ "<Esc>" ], run = [ "escape", "unyank", "select_all --state=false" ], desc = "Exit visual mode, clear selected, or cancel search." },
	#: }}}
	#: Navigation {{{
	{ on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top." },
	{ on = [ "G" ],      run = "arrow 99999999",  desc = "Move cursor to the bottom." },
	{ on = [ "k" ],      run = "arrow -1",        desc = "Move cursor up." },
	{ on = [ "j" ],      run = "arrow 1",         desc = "Move cursor down." },
	{ on = [ "<C-u>" ],  run = "arrow -50%",      desc = "Move cursor up half page." },
	{ on = [ "<C-d>" ],  run = "arrow 50%",       desc = "Move cursor down half page." },
	{ on = [ "<C-b>" ],  run = "arrow -100%",     desc = "Move cursor up one page." },
	{ on = [ "<C-f>" ],  run = "arrow 100%",      desc = "Move cursor down one page." },
	#: }}}
	#: Directory navigation. {{{
	{ on = [ "h" ],       run = "leave",                                desc = "Go back to the parent directory." },
	{ on = [ "l" ],       run = "plugin --sync smart-enter",            desc = "Enter the child directory, or open the file." },
	{ on = [ "<Enter>" ], run = "plugin --sync smart-enter",            desc = "Enter the child directory, or open the file." },
	{ on = [ "H" ],       run = "back",                                 desc = "Go back to the previous directory." },
	{ on = [ "L" ],       run = "forward",                              desc = "Go forward to the next directory." },
	{ on = [ "<C-k>" ],   run = "plugin --sync parent-arrow --args=-1", desc = "Move up on the parent directory." },
	{ on = [ "<C-j>" ],   run = "plugin --sync parent-arrow --args=1",  desc = "Move down on the parent directory." },
	#: }}}
	#: Preview navigation {{{
	{ on = [ "<C-Up>" ],   run = "seek -5", desc = "Seek up 5 units in the preview." },
	{ on = [ "<C-Down>" ], run = "seek 5",  desc = "Seek down 5 units in the preview." },
	#: }}}
	#: Selection {{{
	{ on = [ "<Space>" ], run = [ "select --state=none", "arrow 1" ], desc = "Toggle the current selection state." },
	{ on = [ "v" ],       run = "visual_mode",                        desc = "Enter visual mode (selection mode)." },
	{ on = [ "<C-v>" ],   run = "visual_mode --unset",                desc = "Enter visual mode (unset mode)." },
	{ on = [ "V" ],       run = "select_all --state=none",            desc = "Inverse selection of all files." },
	{ on = [ "<C-a>" ],   run = "select_all --state=true",            desc = "Select all files." },
	#: }}}
	#: Operation {{{
	{ on = [ "a" ],      run = "create",                             desc = "Create a file or directory (ends with / for directories)." },
	{ on = [ "o" ],      run = "open",                               desc = "Open the selected files." },
	{ on = [ "O" ],      run = "open --interactive",                 desc = "Open the selected files interactively." },
	{ on = [ "<C-l>" ],  run = "open --interactive",                 desc = "Open the selected files interactively." },
	{ on = [ "d", "d" ], run = "remove",                             desc = "Move the files to the trash." },
	{ on = [ "d", "D" ], run = "remove --permanently",               desc = "Permanently delete the files." },
	{ on = [ ";" ],      run = "shell",                              desc = "Run a shell command." },
	{ on = [ ":" ],      run = "shell --block",                      desc = "Run a shell command (block the UI until the command finishes)." },
	{ on = [ "z", "h" ], run = "hidden toggle",                      desc = "Toggle the visibility of hidden files." },
	{ on = [ "z", "z" ], run = "plugin --sync max-preview",          desc = "Maximize preview pane." },
	{ on = [ "z", "p" ], run = "plugin --sync hide-preview",         desc = "Hide preview pane." },
	{ on = [ "z", "i" ], run = "plugin zoxide",                      desc = "Jump to a directory using zoxide." },
	{ on = [ "z", "f" ], run = "plugin fzf",                         desc = "Jump to a directory, or reveal a file using fzf." },
	{ on = [ "z", "l" ], run = 'shell --confirm --block "lazygit"',  desc = "Open lazygit." },
	{ on = [ "z", "w" ], run = 'shell --confirm --block "waybg $1"', desc = "Change wallpaper." },
	{ on = [ "z", "W" ], run = ''' shell --confirm 'waybg "$1" && wallust run -p dark16 "$(head -n1 "$HOME/.cache/waybg/wallpaper")" && notify-send -t 2000 "Wallust Theming" "Started applying wallust dark16 colorscheme." && wallust_postrun' ''', desc = "Change wallpaper and wallust theme." },
	{ on = [ "z", "w" ], run = 'shell --confirm "waybg \"$1\""',    desc = "Change wallpaper." },
	{ on = [ "z", "W" ], run = 'shell --confirm "lustbg \"$1\""',   desc = "Change wallpaper and wallust theme." },
	#: }}}
	#: Change file {{{
	{ on = [ "c", "i" ], run = "rename --cursor=before_ext",         desc = "Rename a file or directory. [foo|.txt]" },
	{ on = [ "c", "I" ], run = "rename --cursor=start",              desc = "Rename a file or directory. [|foo.txt]" },
	{ on = [ "c", "A" ], run = "rename --cursor=end",                desc = "Rename a file or directory. [foo.txt|]" },
	{ on = [ "c", "e" ], run = "rename --empty=ext",                 desc = "Rename a file or directory. [foo.|]" },
	{ on = [ "c", "E" ], run = "rename --empty=dot_ext",             desc = "Rename a file or directory. [foo|]" },
	{ on = [ "c", "w" ], run = "rename --empty=stem --cursor=start", desc = "Rename a file or directory. [|.txt]" },
	{ on = [ "c", "W" ], run = "rename --empty=all --cursor=start",  desc = "Rename a file or directory. [|]" },
	{ on = [ "C" ],      run = "rename --empty=all --cursor=start",  desc = "Rename a file or directory. [|]" },
	#: }}}
	#: Copy/pasting {{{
	{ on = [ "y" ],      run = "yank",                  desc = "Copy the selected files." },
	{ on = [ "x" ],      run = "yank --cut",            desc = "Cut the selected files." },
	{ on = [ "c", "p" ], run = "copy path",             desc = "Copy the absolute path." },
	{ on = [ "c", "P" ], run = "copy dirname",          desc = "Copy the path of the parent directory." },
	{ on = [ "c", "f" ], run = "copy filename",         desc = "Copy the name of the file." },
	{ on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the name of the file without the extension." },
	{ on = [ "p", "p" ], run = "paste",                 desc = "Paste the files." },
	{ on = [ "p", "P" ], run = "paste --force",         desc = "Paste the files (overwrite if the destination exists)." },
	{ on = [ "p", "l" ], run = "link",                  desc = "Symlink the absolute path of files." },
	{ on = [ "p", "L" ], run = "link --relative",       desc = "Symlink the relative path of files." },
	#: }}}
	#: Find {{{
	{ on = [ "f", "f" ], run = "search fd",               desc = "Search files by name using fd." },
	{ on = [ "f", "g" ], run = "search rg",               desc = "Search files by content using ripgrep." },
	{ on = [ "f", "n" ], run = "search none",             desc = "Cancel the ongoing search." },
	{ on = [ "f", "t" ], run = "filter --smart",          desc = "Filter the files." },
	{ on = [ "/" ],      run = "find --smart",            desc = "Find next file." },
	{ on = [ "?" ],      run = "find --previous --smart", desc = "Find previous file." },
	{ on = [ "n" ],      run = "find_arrow",              desc = "Go to next found file." },
	{ on = [ "N" ],      run = "find_arrow --previous",   desc = "Go to previous found file." },
	#: }}}
	#: Linemode {{{
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Set linemode to size." },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Set linemode to permissions." },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime." },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Set linemode to none." },
	#: }}}
	#: Sorting {{{
	{ on = [ "s", "m" ], run = "sort modified --dir-first",               desc = "Sort by modified time." },
	{ on = [ "s", "M" ], run = "sort modified --reverse --dir-first",     desc = "Sort by modified time (reverse)." },
	{ on = [ "s", "c" ], run = "sort created --dir-first",                desc = "Sort by created time." },
	{ on = [ "s", "C" ], run = "sort created --reverse --dir-first",      desc = "Sort by created time (reverse)." },
	{ on = [ "s", "e" ], run = "sort extension --dir-first",              desc = "Sort by extension." },
	{ on = [ "s", "E" ], run = "sort extension --reverse --dir-first",    desc = "Sort by extension (reverse)." },
	{ on = [ "s", "a" ], run = "sort alphabetical --dir-first",           desc = "Sort alphabetically." },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse --dir-first", desc = "Sort alphabetically (reverse)." },
	{ on = [ "s", "n" ], run = "sort natural --dir-first",                desc = "Sort naturally." },
	{ on = [ "s", "N" ], run = "sort natural --reverse --dir-first",      desc = "Sort naturally (reverse)." },
	{ on = [ "s", "s" ], run = "sort size --dir-first",                   desc = "Sort by size." },
	{ on = [ "s", "S" ], run = "sort size --reverse --dir-first",         desc = "Sort by size (reverse)." },
	#: }}}
	#: Tabs {{{
	{ on = [ "t", ],    run = "tab_create --current",     desc = "Create a new tab using the current path." },
	{ on = [ "<A-1>" ], run = "tab_switch 0",             desc = "Switch to the first tab." },
	{ on = [ "<A-2>" ], run = "tab_switch 1",             desc = "Switch to the second tab." },
	{ on = [ "<A-3>" ], run = "tab_switch 2",             desc = "Switch to the third tab." },
	{ on = [ "<A-4>" ], run = "tab_switch 3",             desc = "Switch to the fourth tab." },
	{ on = [ "<A-5>" ], run = "tab_switch 4",             desc = "Switch to the fifth tab." },
	{ on = [ "<A-6>" ], run = "tab_switch 5",             desc = "Switch to the sixth tab." },
	{ on = [ "<A-7>" ], run = "tab_switch 6",             desc = "Switch to the seventh tab." },
	{ on = [ "<A-8>" ], run = "tab_switch 7",             desc = "Switch to the eighth tab." },
	{ on = [ "<A-9>" ], run = "tab_switch 8",             desc = "Switch to the ninth tab." },
	{ on = [ "[" ],     run = "tab_switch -1 --relative", desc = "Switch to the previous tab." },
	{ on = [ "]" ],     run = "tab_switch 1 --relative",  desc = "Switch to the next tab." },
	{ on = [ "{" ],     run = "tab_swap -1",              desc = "Swap the current tab with the previous tab." },
	{ on = [ "}" ],     run = "tab_swap 1",               desc = "Swap the current tab with the next tab." },
	#: }}}
	#: Tasks {{{
	{ on = [ "T" ], run = "tasks_show", desc = "Show the tasks manager." },
	#: }}}
	#: Goto {{{
	{ on = [ "g", "<Space>" ], run = "cd --interactive",         desc = "Go to a directory interactively." },
	{ on = [ "g", "h" ],       run = "cd ~",                     desc = "Go to the home directory." },
	{ on = [ "g", "p" ],       run = "cd ~/Pictures",            desc = "Go to the pictures directory." },
	{ on = [ "g", "m" ],       run = "cd ~/Music",               desc = "Go to the music directory." },
	{ on = [ "g", "v" ],       run = "cd ~/Videos",              desc = "Go to the videos directory." },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",           desc = "Go to the downloads directory." },
	{ on = [ "g", "D" ],       run = "cd ~/Documents",           desc = "Go to the documents directory." },
	{ on = [ "g", "c" ],       run = "cd ~/.config",             desc = "Go to the .config directory." },
	{ on = [ "g", "l" ],       run = "cd ~/.local",              desc = "Go to the .local directory." },
	{ on = [ "g", "b" ],       run = "cd ~/.local/bin",          desc = "Go to the .local/bin directory." },
	{ on = [ "g", "s" ],       run = "cd ~/.local/sources",      desc = "Go to the git sources directory." },
	{ on = [ "g", "r" ],       run = "cd ~/.local/sources/Reds", desc = "Go to the ~/.local/sources/Reds directory." },
	{ on = [ "g", "t" ],       run = "cd /tmp",                  desc = "Go to the temporary directory." },
	#: }}}
	#: Help {{{
	{ on = [ "g", "?" ], run = "help", desc = "Open help." },
	{ on = [ "<F1>" ],   run = "help", desc = "Open help." },
	#: }}}
	#: Relative-motions (https://github.com/dedukun/relative-motions.yazi) {{{
	{ on = [ "1" ], run = "plugin relative-motions --args=1", desc = "Move in relative steps" },
	{ on = [ "2" ], run = "plugin relative-motions --args=2", desc = "Move in relative steps" },
	{ on = [ "3" ], run = "plugin relative-motions --args=3", desc = "Move in relative steps" },
	{ on = [ "4" ], run = "plugin relative-motions --args=4", desc = "Move in relative steps" },
	{ on = [ "5" ], run = "plugin relative-motions --args=5", desc = "Move in relative steps" },
	{ on = [ "6" ], run = "plugin relative-motions --args=6", desc = "Move in relative steps" },
	{ on = [ "7" ], run = "plugin relative-motions --args=7", desc = "Move in relative steps" },
	{ on = [ "8" ], run = "plugin relative-motions --args=8", desc = "Move in relative steps" },
	{ on = [ "9" ], run = "plugin relative-motions --args=9", desc = "Move in relative steps" },
	#: }}}
]
#: }}}
#: Tasks {{{
[tasks]
keymap = [
	{ on = [ "<Esc>" ],   run = "close",    desc = "Hide the task manager." },
	{ on = [ "k" ],       run = "arrow -1", desc = "Move cursor up." },
	{ on = [ "j" ],       run = "arrow 1",  desc = "Move cursor down." },
	{ on = [ "<Enter>" ], run = "inspect",  desc = "Inspect the task." },
	{ on = [ "q" ],       run = "cancel",   desc = "Cancel the task." },

	# Help
	{ on = [ "g", "?" ], run = "help", desc = "Open help." },
	{ on = [ "<F1>" ],   run = "help", desc = "Open help." },
]
#: }}}
#: Select {{{
[select]
keymap = [
	{ on = [ "<Esc>" ],   run = "close",          desc = "Cancel selection" },
	{ on = [ "<C-c>" ],   run = "escape",         desc = "Cancel selection" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the selection" },
	{ on = [ "k" ],       run = "arrow -1",       desc = "Move cursor up" },
	{ on = [ "j" ],       run = "arrow 1",        desc = "Move cursor down" },

	# Help
	{ on = [ "g", "?" ], run = "help", desc = "Open help." },
	{ on = [ "<F1>" ],   run = "help", desc = "Open help." },
]
#: }}}
#: Input {{{
[input]
keymap = [
	{ on = [ "<Esc>" ],   run = "close",          desc = "Cancel input." },
	{ on = [ "<C-c>" ],   run = "escape",         desc = "Go back the normal mode, or cancel input." },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the input." },

	# Mode
	{ on = [ "i" ], run = "insert",                              desc = "Enter insert mode" },
	{ on = [ "a" ], run = "insert --append",                     desc = "Enter append mode" },
	{ on = [ "I" ], run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = [ "A" ], run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = [ "v" ], run = "visual",                              desc = "Enter visual mode" },
	{ on = [ "V" ], run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = [ "h" ],       run = "move -1", desc = "Move back a character" },
	{ on = [ "l" ],       run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<Left>" ],  run = "move -1", desc = "Move back a character" },
	{ on = [ "<Right>" ], run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<C-b>" ],   run = "move -1", desc = "Move back a character" },
	{ on = [ "<C-f>" ],   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = [ "b" ], run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "w" ], run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = [ "e" ], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = [ "0" ], run = "move -999", desc = "Move to the BOL" },
	{ on = [ "$" ], run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = [ "<Backspace>" ], run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = [ "<Delete>" ],    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = [ "<C-h>" ],       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = [ "<C-d>" ],       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = [ "<C-u>" ], run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = [ "<C-k>" ], run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = [ "<C-w>" ], run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = [ "<A-d>" ], run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = [ "d" ], run = "delete --cut",                              desc = "Cut the selected characters." },
	{ on = [ "D" ], run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL." },
	{ on = [ "c" ], run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode." },
	{ on = [ "C" ], run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode." },
	{ on = [ "x" ], run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character." },
	{ on = [ "y" ], run = "yank",                                      desc = "Copy the selected characters." },
	{ on = [ "p" ], run = "paste",                                     desc = "Paste the copied characters after the cursor." },
	{ on = [ "P" ], run = "paste --before",                            desc = "Paste the copied characters before the cursor." },

	# Undo/Redo
	{ on = [ "u" ],     run = "undo", desc = "Undo the last operation" },
	{ on = [ "<C-r>" ], run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = [ "g", "?" ], run = "help", desc = "Open help." },
	{ on = [ "<F1>" ],   run = "help", desc = "Open help." },
]
#: }}}
#: Completion {{{
[completion]
keymap = [
	{ on = [ "<C-q>" ],   run = "close",                                      desc = "Cancel completion" },
	{ on = [ "<Tab>" ],   run = "close --submit",                             desc = "Submit the completion" },
	{ on = [ "<Enter>" ], run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },
	{ on = [ "<C-p>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<C-n>" ],   run = "arrow 1",  desc = "Move cursor down" },
	{ on = [ "<C-j>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<C-k>" ],   run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = [ "g", "?" ], run = "help", desc = "Open help." },
	{ on = [ "<F1>" ],   run = "help", desc = "Open help." },
]
#: }}}
#: Help {{{
[help]
keymap = [
	{ on = [ "<Esc>" ], run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = [ "q" ],     run = "close",  desc = "Exit the process" },
	{ on = [ "<C-q>" ], run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = [ "k" ],     run = "arrow -1",  desc = "Move cursor up" },
	{ on = [ "j" ],     run = "arrow 1",   desc = "Move cursor down" },
	{ on = [ "<C-u>" ], run = "arrow -5",  desc = "Move cursor up 5 lines." },
	{ on = [ "<C-d>" ], run = "arrow 5",   desc = "Move cursor down 5 lines." },
	{ on = [ "<C-b>" ], run = "arrow -10", desc = "Move cursor up 10 lines." },
	{ on = [ "<C-f>" ], run = "arrow 10",  desc = "Move cursor down 10 lines." },

	# Filtering
	{ on = [ "/" ], run = "filter", desc = "Apply a filter for the help items" },
]
#: }}}
