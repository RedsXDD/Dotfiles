# vim:fileencoding=utf-8:foldmethod=marker:foldenable

#: Manager {{{
[manager]
keymap = [
  #: General {{{
	{ on = "<Esc>", run = [ "escape", "unyank" ], desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "q",     run = "quit",                 desc = "Quit the process" },
	{ on = "Q",     run = "quit --no-cwd-file",   desc = "Quit the process without outputting cwd-file" },
	{ on = "<C-q>", run = "close",                desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",              desc = "Suspend the process" },
  { on = "!", run = '''
    shell --block '
      [ -f "${XDG_CONFIG_HOME:-$HOME/.config}/starship/starship.toml" ] && export STARSHIP_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/starship/starship.toml"
      [ -z "${DISPLAY}" ] && [ -f "${XDG_CONFIG_HOME:-$HOME/.config}/starship/starship_tty.toml" ] && export STARSHIP_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/starship/starship_tty.toml"
      $SHELL'
    ''', desc = "Open terminal shell." },
  #: }}}
	#: Movement {{{
  # Navigation.
	{ on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	{ on = "G",          run = "arrow 99999999",  desc = "Move cursor to the bottom" },
	{ on = "k",          run = "arrow -1",        desc = "Move cursor up" },
	{ on = "j",          run = "arrow 1",         desc = "Move cursor down" },
	{ on = "<C-u>",      run = "arrow -50%",      desc = "Move cursor up half page" },
	{ on = "<C-d>",      run = "arrow 50%",       desc = "Move cursor down half page" },
	{ on = "<C-b>",      run = "arrow -100%",     desc = "Move cursor up one page" },
	{ on = "<C-f>",      run = "arrow 100%",      desc = "Move cursor down one page" },

  # Directory navigation.
	{ on = "h",       run = "plugin bypass --args=reverse",     desc = "Recursively enter parent directory, skipping parents with only a single subdirectory" },
	{ on = "l",       run = "plugin bypass --args=smart_enter", desc = "Open a file, or recursively enter child directory, skipping children with only a single subdirectory" },
	{ on = "H",       run = "leave",                            desc = "Go back to the previous directory" },
	{ on = "L",       run = "enter",                            desc = "Go forward to the next directory" },
	{ on = "<Enter>", run = "plugin bypass --args=smart_enter", desc = "Open a file, or recursively enter child directory, skipping children with only a single subdirectory" },
	{ on = "<C-k>" ,  run = "plugin parent-arrow --args=-1",    desc = "Move up on the parent directory" },
	{ on = "<C-j>" ,  run = "plugin parent-arrow --args=1",     desc = "Move down on the parent directory" },

	# Seeking.
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Relative-motions.
	{ on = "1", run = "plugin relative-motions --args=1", desc = "Move in relative steps" },
	{ on = "2", run = "plugin relative-motions --args=2", desc = "Move in relative steps" },
	{ on = "3", run = "plugin relative-motions --args=3", desc = "Move in relative steps" },
	{ on = "4", run = "plugin relative-motions --args=4", desc = "Move in relative steps" },
	{ on = "5", run = "plugin relative-motions --args=5", desc = "Move in relative steps" },
	{ on = "6", run = "plugin relative-motions --args=6", desc = "Move in relative steps" },
	{ on = "7", run = "plugin relative-motions --args=7", desc = "Move in relative steps" },
	{ on = "8", run = "plugin relative-motions --args=8", desc = "Move in relative steps" },
	{ on = "9", run = "plugin relative-motions --args=9", desc = "Move in relative steps" },
	#: }}}
	#: Selection {{{
	{ on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on", desc = "Select all files" },

	# Visual mode.
	{ on = "v",     run = "visual_mode",             desc = "Enter visual mode (selection mode)" },
	{ on = "V",     run = "toggle_all --state=none", desc = "Invert selection of all files" },
	{ on = "<C-v>", run = "visual_mode --unset",     desc = "Enter visual mode (unset mode)" },
  #: }}}
	#: Operations {{{
  # Spotting.
	{ on = "<Tab>", run = "spot", desc = "Spot info of hovered file" },

	# Tasks window.
	{ on = "w", run = "tasks_show", desc = "Show task manager" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },

  # Opener.
	{ on = "o", run = "open",               desc = "Open selected files" },
	{ on = "O", run = "open --interactive", desc = "Open selected files interactively" },

  # Command mode.
	{ on = ";", run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },

  # Trash management.
	{ on = [ "d", "d" ], run = "remove",               desc = "Trash selected files" },
	{ on = [ "d", "D" ], run = "remove --permanently", desc = "Permanently delete selected files" },
  { on = [ "d", "r" ], run = "plugin restore",       desc = "Restore last deleted files/folders" },

  # Creating files.
	# { on = [ "m", "f" ], run = "create",                                           desc = "Create a file (ends name with '/' for directories)" },
	{ on = [ "m", "f" ], run = 'shell --interactive --noconfirm --block "mf "',    desc = "Create file(s) and/or directories (requires 'mf' script) (end name with '/' for directories)" },
	{ on = [ "m", "s" ], run = 'shell --interactive --noconfirm --block "ms -y "', desc = "Create a new script (requires 'ms' script)" },

  # Archiving files (with ouch.yazi plugin).
	{ on = [ "a", "7" ], run = 'plugin ouch --args=7z', desc = "Compress file(s) into a 7z archive" },
	{ on = [ "a", "Z" ], run = 'plugin ouch --args=zst', desc = "Compress file into a zst archive" },
	{ on = [ "a", "b" ], run = 'plugin ouch --args=bz', desc = "Compress file into a bz archive" },
	{ on = [ "a", "g" ], run = 'plugin ouch --args=gz',  desc = "Compress file into a gzip archive" },
	{ on = [ "a", "l" ], run = 'plugin ouch --args=lz4', desc = "Compress file into a lz4 archive" },
	{ on = [ "a", "r" ], run = 'plugin ouch --args=rar', desc = "Compress file(s) into a rar archive" },
	{ on = [ "a", "s" ], run = 'plugin ouch --args=sz', desc = "Compress file into a sz (Snappy) archive" },
	{ on = [ "a", "t" ], run = 'plugin ouch --args=tar', desc = "Compress file(s) into a tar archive" },
	{ on = [ "a", "x" ], run = 'plugin ouch --args=xz', desc = "Compress file into a xz archive" },
	{ on = [ "a", "z" ], run = 'plugin ouch --args=zip', desc = "Compress file(s) into a zip archive" },

  # Copy/yanking.
	{ on = "x",     run = "yank --cut",                      desc = "Yank selected files (cut)" },
  { on = "y",     run = [ "yank", "plugin wl-clipboard" ], desc = "Yank selected files (copy)"},
  { on = "<C-y>", run = "plugin copy-file-contents",       desc = "Copy contents of file"},

	{ on = [ "c", "p" ], run = "copy path",                 desc = "Copy the file path" },
	{ on = [ "c", "d" ], run = "copy dirname",              desc = "Copy the directory path" },
	{ on = [ "c", "f" ], run = "copy filename",             desc = "Copy the filename" },
	{ on = [ "c", "n" ], run = "copy name_without_ext",     desc = "Copy the filename without extension" },

  # Pasting/linking files.
	{ on = [ "p", "p" ], run = "paste",           desc = "Paste yanked files" },
	{ on = [ "p", "P" ], run = "paste --force",   desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = [ "p", "l" ], run = "link",            desc = "Symlink the absolute path of yanked files" },
	{ on = [ "p", "L" ], run = "link --relative", desc = "Symlink the relative path of yanked files" },
	{ on = [ "p", "h" ], run = "hardlink",        desc = "Hardlink yanked files" },

  # File modifiying.
	{ on = [ "c", "h" ], run = "plugin chmod",                       desc = "Change file(s) permissions" },
	{ on = [ "c", "i" ], run = "rename --cursor=before_ext",         desc = "Rename selected file(s). [foo|.txt]" },
	{ on = [ "c", "I" ], run = "rename --cursor=start",              desc = "Rename selected file(s). [|foo.txt]" },
	{ on = [ "c", "A" ], run = "rename --cursor=end",                desc = "Rename selected file(s). [foo.txt|]" },
	{ on = [ "c", "e" ], run = "rename --empty=ext",                 desc = "Rename selected file(s). [foo.|]" },
	{ on = [ "c", "E" ], run = "rename --empty=dot_ext",             desc = "Rename selected file(s). [foo|]" },
	{ on = [ "c", "w" ], run = "rename --empty=stem --cursor=start", desc = "Rename selected file(s). [|.txt]" },
	{ on = [ "c", "W" ], run = "rename --empty=all --cursor=start",  desc = "Rename selected file(s). [|]" },
	{ on = [ "C" ],      run = "rename --empty=all --cursor=start",  desc = "Rename selected file(s). [|]" },

	# Linemode.
	{ on = [ "z", "s" ], run = "linemode size",        desc = "Set linemode to 'size'" },
	{ on = [ "z", "x" ], run = "linemode permissions", desc = "Set linemode to 'permissions'" },
	{ on = [ "z", "b" ], run = "linemode btime",       desc = "Set linemode to 'btime'" },
	{ on = [ "z", "m" ], run = "linemode mtime",       desc = "Set linemode to 'mtime'" },
	{ on = [ "z", "o" ], run = "linemode owner",       desc = "Set linemode to 'owner'" },
	{ on = [ "z", "n" ], run = "linemode none",        desc = "Set linemode to 'none'" },

  # Toggle.
	{ on = [ "t", "h" ], run = "hidden toggle",                     desc = "Toggle the visibility of hidden files" },
	{ on = [ "t", "z" ], run = "plugin max-preview",                desc = "Maximize or restore preview pane" },
  { on = [ "t", "r" ], run = "plugin toggle-view --args=parent",  desc = "Toggle parent preview pane" },
  { on = [ "t", "c" ], run = "plugin toggle-view --args=current", desc = "Toggle current preview pane" },
  { on = [ "t", "p" ], run = "plugin toggle-view --args=preview", desc = "Toggle file preview pane" },
	{ on = [ "t", "l" ], run = "plugin lazygit",      desc = "Open lazygit" },

  # # Misc.
	{ on = [ "z", "w" ], run = 'shell --confirm "waybg \"$1\""',    desc = "Change wallpaper (requires 'waybg' script)" },
	{ on = [ "z", "W" ], run = 'shell --confirm "lustbg \"$1\""',   desc = "Change wallpaper and wallust theme (requires 'lustbg' script)" },
  #: }}}
  #: Searching {{{
	{ on = "n",          run = "find_arrow",                 desc = "Goto the next found" },
	{ on = "N",          run = "find_arrow --previous",      desc = "Goto the previous found" },
	{ on = "/",          run = "find --smart",               desc = "Find next file" },
	{ on = "?",          run = "find --previous --smart",    desc = "Find previous file" },
	{ on = [ "f", "j" ], run = "plugin first-non-directory", desc = "Jumps to the first non-directory file" },
	{ on = [ "f", "i" ], run = "plugin zoxide",              desc = "Jump to a directory via zoxide" },
	{ on = [ "f", "z" ], run = "plugin fzf",                 desc = "Jump to a file/directory via fzf" },
	{ on = [ "f", "d" ], run = "search --via=fd",            desc = "Search files by name via fd" },
	{ on = [ "f", "g" ], run = "search --via=rg",            desc = "Search files by content via ripgrep" },
	{ on = [ "f", "t" ], run = "filter --smart",             desc = "Filter files" },
	{ on = [ "f", "T" ], run = "plugin smart-filter",        desc = "Filter files (with smart-filter plugin)" },
  #: }}}
	#: Sorting {{{
	{ on = [ "s", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ "s", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ "s", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ "s", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ "s", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ "s", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ "s", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ "s", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ "s", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ "s", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ "s", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },
  #: }}}
	#: Gotos {{{
  { on = [ "g", "." ], run = '''
    shell 'ya emit cd "$(git rev-parse --show-toplevel)"'
    ''', desc = "Goto root directory of git repository" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive",         desc = "Go to a directory interactively" },
	{ on = [ "g", "h" ],       run = "cd ~",                     desc = "Goto ~/" },
	{ on = [ "g", "p" ],       run = "cd ~/Pictures",            desc = "Goto ~/Pictures" },
	{ on = [ "g", "m" ],       run = "cd ~/Music",               desc = "Goto ~/Music" },
	{ on = [ "g", "v" ],       run = "cd ~/Videos",              desc = "Goto ~/Videos" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",           desc = "Goto ~/Downloads" },
	{ on = [ "g", "D" ],       run = "cd ~/Documents",           desc = "Goto ~/Documents" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",             desc = "Goto ~/.config" },
	{ on = [ "g", "l" ],       run = "cd ~/.local",              desc = "Goto ~/.local" },
	{ on = [ "g", "b" ],       run = "cd ~/.local/bin",          desc = "Goto ~/.local/bin" },
	{ on = [ "g", "s" ],       run = "cd ~/.local/sources",      desc = "Goto ~/.local/sources" },
	{ on = [ "g", "t" ],       run = "cd /tmp",                  desc = "Goto /tmp" },
  #: }}}
	#: Tabs {{{
	{ on = [ "t", "c" ], run = "plugin smart-tab",             desc = "Create a tab and enter the hovered directory" },
	{ on = [ "t", "C" ], run = "tab_create --current",         desc = "Create a new tab on CWD" },
	{ on = "[",          run = "tab_switch -1 --relative",     desc = "Switch to the previous tab" },
	{ on = "]",          run = "tab_switch 1 --relative",      desc = "Switch to the next tab" },
	{ on = "{",          run = "tab_swap -1",                  desc = "Swap current tab with previous tab" },
	{ on = "}",          run = "tab_swap 1",                   desc = "Swap current tab with next tab" },
	{ on = "<A-1>",      run = "plugin smart-switch --args=0", desc = "Switch to or create tab 1" },
	{ on = "<A-2>",      run = "plugin smart-switch --args=1", desc = "Switch to or create tab 2" },
	{ on = "<A-3>",      run = "plugin smart-switch --args=2", desc = "Switch to or create tab 3" },
	{ on = "<A-4>",      run = "plugin smart-switch --args=3", desc = "Switch to or create tab 4" },
	{ on = "<A-5>",      run = "plugin smart-switch --args=4", desc = "Switch to or create tab 5" },
	{ on = "<A-6>",      run = "plugin smart-switch --args=5", desc = "Switch to or create tab 6" },
	{ on = "<A-7>",      run = "plugin smart-switch --args=6", desc = "Switch to or create tab 7" },
	{ on = "<A-8>",      run = "plugin smart-switch --args=7", desc = "Switch to or create tab 8" },
	{ on = "<A-9>",      run = "plugin smart-switch --args=8", desc = "Switch to or create tab 9" },
  #: }}}
]
#: }}}
#: Tasks {{{
[tasks]
keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "q", run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "<C-c>", run = "cancel",  desc = "Cancel the task" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Spotter {{{
[spot]
keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spotter menu" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "h", run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "l", run = "swipe 1",  desc = "Swipe to the previous file" },

	{ on = "y", run = "copy cell", desc = "Copy selected cell" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Picker {{{
[pick]
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-c>",   run = "escape",         desc = "Cancel selection" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Input {{{
[input]
keymap = [
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },

	# Modes.
	{ on = "i", run = "insert",                              desc = "Enter insert mode" },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode" },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode" },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement.
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement.
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement.
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },

	# Delete.
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill.
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste.
	{ on = "d", run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = "D", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = "y", run = "yank",                                      desc = "Copy the selected characters" },
	{ on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor" },
	{ on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor" },

	# Undo/Redo.
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Confirm {{{
[confirm]
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Completion {{{
[completion]
keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

  # Movement.
	{ on = "<C-p>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>",   run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<C-j>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-k>",   run = "arrow 1",  desc = "Move cursor down" },

	# Help menu.
	{ on = [ "g", "?" ], run = "help", desc = "Open help" },
	{ on = "<F1>",       run = "help", desc = "Open help" },
]
#: }}}
#: Help {{{
[help]
keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "q",     run = "close",  desc = "Hide the help" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },

	# Navigation.
	{ on = "k",     run = "arrow -1",  desc = "Move cursor up" },
	{ on = "j",     run = "arrow 1",   desc = "Move cursor down" },
	{ on = "<C-u>", run = "arrow -5",  desc = "Move cursor up 5 lines." },
	{ on = "<C-d>", run = "arrow 5",   desc = "Move cursor down 5 lines." },
	{ on = "<C-b>", run = "arrow -10", desc = "Move cursor up 10 lines." },
	{ on = "<C-f>", run = "arrow 10",  desc = "Move cursor down 10 lines." },

	# Filtering.
	{ on = "/", run = "filter", desc = "Apply a filter for the help items" },
]
#: }}}
