#!/usr/bin/env sh

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Username:
echo ''
until [ -n "$usr" ];
do
 printf 'Please Give a Name to Your New User: '
 read usr
done

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Wheel or Not:
until [ -n "$valid" ];
do
 echo ''
 printf "Do You Want $usr to be part of the Wheel Group (Have Sudo Permissions)? [Y/n]: "
 read wheel

 # Check For Valid Choice:
 case "$wheel" in
  [Nn]|[Nn]o) wheel='No' && valid='y'       ;;
  ''|[Yy]|[Yy]es) wheel='Yes' && valid='y'  ;;
 esac

done
unset valid

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Select Default Shell:
until [ -n "$valid" ]
do
 echo ''; echo 'Please Choose One Of the Following Options as the Default Shell For Your User:'
 echo ''; echo '1) Bash'; echo '2) Zsh'; echo '3) Fish'; echo ''
 printf 'Selected Shell [1-3]: '
 read sh

 # Check For Valid Choice:
 case "$sh" in
  1) sh='bash' && valid='y' ;;
  2) sh='zsh' && valid='y'  ;;
  3) echo '' && echo 'Fish Is Not Currently Supported as a Default Shell' && unset sh;;
  *) echo '' && echo 'Please Select a Valid Value' && unset sh
 esac

done
unset valid

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Link Files:
until [ -n "$valid" ]
do
 echo ''
 printf "Do You Want To Link $usr's Shell Files From /home/$usr to $bz? [Y/n]: "
 read links

 # Check For Valid Choice:
 case "$links" in
  [Nn]|[Nn]o) links='No' && valid='y'       ;;
  ''|[Yy]|[Yy]es) links='Yes' && valid='y'  ;;
 esac

done
unset valid

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# List Choosen Options:
echo ''
echo 'New User Info:'
echo "Username: $usr"
echo "Part of Wheel Group: $wheel"
echo "Default Shell: $sh"
echo "Link Shell Files: $links"
echo ''
printf 'Do You Want To Generate This User? [Y/n]: '
read genusr

# Check For Valid Choice:
case "$genusr" in
 [Nn]|[Nn]o) usrreset && return ;;
 ''|[Yy]|[Yy]es)
  # User Generation:
  echo ''; echo 'Generating User ...'; echo ''

  # Wheel Generation:
  [ "$wheel" = 'Yes' ] &&
  sudo \useradd -mG wheel -s /bin/"$sh" "$usr" && usrgen='y' &&
  echo '' &&
  echo 'Please Type in a Password For Your New User' &&
  echo '' &&
  sudo \passwd "$usr" && echo ''
  valid='y'

  # No-Wheel Generation:
  [ "$wheel" = 'No' ] &&
  sudo \useradd -ms /bin/"$sh" "$usr" && usrgen='y' &&
  echo '' &&
  echo 'Please Type in a Password For Your New User' &&
  echo '' &&
  sudo \passwd "$usr" && echo ''
  valid='y'

  # Symlink Shell Files:
  if [ -n "$valid" ]; then
   if [ "$links" = 'Yes' ]; then
    sudo \ln -sf /home/lewd/.config/shell/bz.sh /home/"$usr"/.bashrc
    sudo \ln -sf /home/lewd/.config/shell/bz.sh /home/"$usr"/.bash_profile
    sudo \ln -sf /home/lewd/.config/shell/bz.sh /home/"$usr"/.zshrc
    sudo \ln -sf /home/lewd/.config/shell/bz.sh /home/"$usr"/.zprofile
    sudo chown "$usr":"$usr" /home/"$usr"/*
   fi
   echo "User $usr Generated Successfully"; echo ''
  else
   echo ''
   echo 'User Generation Falied'
   echo ''
   [ -n "$usrgen" ] && sudo \userdel "$usr" && sudo \rm -rvf /home/"$usr"
  fi
  ;;
 *) echo "$genusr is not a Valid Option" && echo '' && exit 0 ;;
esac

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #
