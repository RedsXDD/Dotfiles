#!/usr/bin/env sh

# Exit if necessary scripts aren't in PATH:
if ! which waybg || ! which waybg_postrun || ! which wallust || ! which wallust_postrun || ! which flust; then
	echo "ERROR: You don't have the required dependency in your PATH variable, make sure to install them correctly."
	echo "Dependency scripts required: waybg, waybg_postrun, wallust, wallust_postrun, flust."
	exit 1
fi >/dev/null 2>&1

apply_colorscheme() { wallust cs "$1" && wallust_postrun; }

set_wall_theme() { wallust run -k "$(head -n1 "$HOME/.cache/waybg/wallpaper")"; }

apply_wallpaper() {
	waybg "$1" && waybg_postrun &&
		notify-send -t 2000 'Wallust theming' 'Generating wallust theme.' &&
		set_wall_theme && wallust_postrun
}

# Change theme with flust if no arguments were given.
if [ -z "$*" ]; then
	theme="$(flust)"
	[ -n "$theme" ] && wallust_postrun && exit 0
fi

# Change wallpaper and switch to specified colorscheme if two arguments were given.
if [ -n "$2" ]; then
	wallpaper="$(dirname -- "$1")/$(basename -- "$1")"
	theme="$(dirname -- "$2")/$(basename -- "$2")"
	waybg "$wallpaper" && waybg_postrun && apply_colorscheme "$theme" && exit 0
fi

# If only one argument was given, check if it's an wallpaper of a .json colorscheme file, and apply wallust theme accordingly.
file="$(dirname "$1")/$(basename "$1")"
file_extension="$(basename -- "$file" | awk 'BEGIN { FS = "." } { print "." tolower($NF) }')"

case "$file_extension" in
'.json') apply_colorscheme "$file" ;;
*) apply_wallpaper "$file" ;;
esac
