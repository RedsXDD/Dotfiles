#!/usr/bin/env sh
# shellcheck disable=SC2016

SESSION_PATH_SEP='|'
ZELLIJ_SWITCH_PATH="${XDG_CONFIG_HOME:-${HOME}/.config}/zellij/plugins"
if [ -n "${DISPLAY}" ]; then
        DIRECTORY_ICON=' '
        SESSION_ICON='󰮊 '
        PICKER_PROMPT='󰍉 Select Zellij Session: '
else
        DIRECTORY_ICON='D '
        SESSION_ICON='S '
        PICKER_PROMPT='* Select Zellij Session: '
fi

fuzzy_finder() {
        SHELL="$(which sh)" # This forces a posix shell to be used on preview panes.
        if which fzf >/dev/null 2>&1; then
                fzf "$@"
        elif which sk >/dev/null 2>&1; then
                sk "$@"
        fi
}

install_zellij_switch() {
        printf '%s\n' \
                "This script uses the zellij plugin \`zellij-switch\` as one of it's dependencies!" \
                'Installing `zellij-switch` automatically (this only happens on first startup) ...'

        zellij_switch_tmp_dir="$(mktemp -d '/tmp/zellij-switch-tmp-XXXXXXXXXX')"
        trap 'rm -rf "${zellij_switch_tmp_dir}"' 0 1 15

        git clone https://github.com/mostafaqanbaryan/zellij-switch.git "${zellij_switch_tmp_dir}"
        cd "${zellij_switch_tmp_dir}" || exit 1
        rustup target add wasm32-wasip1
        cargo build --target wasm32-wasip1 --release || exit 1
        [ ! -d "${ZELLIJ_SWITCH_PATH}" ] && mkdir -pv "${ZELLIJ_SWITCH_PATH}"
        mv -vf "${zellij_switch_tmp_dir}/target/wasm32-wasip1/release/zellij-switch.wasm" "${ZELLIJ_SWITCH_PATH}"
}

handle_sessions() {
        session_name="${1}"

        current_session="$(zellij ls --no-formatting 2>/dev/null | awk -F '[' '/\(current\)/ { gsub(/\s+/, ""); print $1 }' 2>/dev/null)"
        [ "${session_name}" = "${current_session}" ] &&
                echo 'ERROR: You cannot switch to the currently active session !!!' &&
                exit 1

        if [ -z "${ZELLIJ}" ]; then
                zellij attach --create "${session_name}"
        else
                zellij attach --create-background "${session_name}" 2>/dev/null
                zellij pipe --plugin "file:${ZELLIJ_SWITCH_PATH}/zellij-switch.wasm" -- "--session ${session_name}"
        fi

        exit 0
}

handle_dirs() {
        session_path="$(readlink -f -- "${1}")"
        cd -- "${session_path}" || exit 1
        zoxide add "${session_path}"

        PATH_BASENAME="$(basename "${session_path}")"

        GIT_ROOT="$(git -C "${session_path}" rev-parse --show-toplevel 2>/dev/null)"
        GIT_ROOT_BASENAME="$(basename "${GIT_ROOT}")"

        GIT_WORKTREE_ROOT="$(git -C "${session_path}" rev-parse --git-common-dir 2>/dev/null)"
        GIT_WORKTREE_ROOT_BASENAME="$(basename "${GIT_WORKTREE_ROOT}")"

        if [ -n "${GIT_ROOT_BASENAME}" ]; then
                session_name="${GIT_ROOT_BASENAME}${session_path#"${GIT_ROOT}"}"
        elif [ -n "${GIT_WORKTREE_ROOT_BASENAME}" ]; then
                session_name="${GIT_WORKTREE_ROOT_BASENAME}${session_path#"${GIT_WORKTREE_ROOT}"}"
        else
                session_name="${PATH_BASENAME}"
        fi

        session_name="$(echo "${session_name}" | sed "sI/I${SESSION_PATH_SEP}Ig")"
        handle_sessions "${session_name}"
}

fzf_contents() {
        # This awk command formats the output list from zellij ls so that:
        # 1) It does NOT print the line listing the currently active zellij session `!/\(current\)/`
        # 2) The session icon appears green just like the zellij session names `\033[0;32m`.
        # 3) The text formatting is entirely reset at the end of the session icon `\033[0m`.
        # 4) Zellij's session names appear right after the session icon.
        zellij ls 2>/dev/null | awk '!/\(current\)/ { print "'"\033[0;32m${SESSION_ICON}\033[0m"'" $0 }'

        # This awk command formats the output list from zoxide query so that:
        # 1) Replaces all the `$HOME` instances with `~`.
        # 2) Directory icon appears blue `\033[0;34m`.
        # 3) The text from the list is bold `\033[0;1m`.
        # 4) The text formatting is entirely reset at the end of every list item `\033[0m`.
        zoxide query -l | awk '{
                gsub("'"${HOME}"'", "~");
                print "'"\033[0;34m${DIRECTORY_ICON}\033[0;1m"'" $0 "\033[0m"
        }'
}

fzf_session_preview() {
        if [ -n "${DISPLAY}" ]; then
                cat <<-EOF_DISPLAY
███████╗███████╗██╗     ██╗     ██╗     ██╗
╚══███╔╝██╔════╝██║     ██║     ██║     ██║
  ███╔╝ █████╗  ██║     ██║     ██║     ██║
 ███╔╝  ██╔══╝  ██║     ██║     ██║██   ██║
███████╗███████╗███████╗███████╗██║╚█████╔╝
╚══════╝╚══════╝╚══════╝╚══════╝╚═╝ ╚════╝
EOF_DISPLAY
        else
                cat <<-EOF_TTY
 _____    _ _ _  _
|__  /___| | (_)(_)
  / // _ \ | | || |
 / /|  __/ | | || |
/____\___|_|_|_|/ |
              |__/
EOF_TTY
        fi
}

get_selected_session() {
        SHELL="$(which sh)"
        selected_session="$(fzf_contents | fuzzy_finder \
                --ansi \
                --info=inline \
                --height=~100% \
                --print-query \
                --prompt "${PICKER_PROMPT}" \
                --preview-window=up:7 \
                --preview "
                        grep_check=\"\$(echo {} | grep '^${SESSION_ICON}')\"
                        if [ -n \"\${grep_check}\" ]; then
                                printf '%s\n' \"$(fzf_session_preview)\"
                                return 0
                        fi

                        # This huge awk command is just a fancier way of doing cut -d' ' -f2- | sed 's|~|${HOME}|g'
                        directory_path=\$(echo {} | awk -F ' ' -v n=2 '{ gsub(/~/, \"${HOME}\"); for (i=n; i<=NF; i++) printf \"%s%s\", \$i, (i<NF ? OFS : ORS) }')
                        directory_path=\$(readlink -f -- \"\${directory_path}\")

                        if ! which eza >/dev/null 2>&1; then
                                ls --group-directories-first --color=always -CA \"\${directory_path}\" || return 1
                                return 0
                        fi

                        if [ -z \"\${DISPLAY}\" ]; then
                                eza --group-directories-first --color=always --git-ignore -a \"\${directory_path}\" || return 1
                        else
                                eza --group-directories-first --color=always --git-ignore --icons -a \"\${directory_path}\" || return 1
                        fi
                        return 0
        ")"

        [ -z "${selected_session}" ] && exit 1
        echo "${selected_session}" | sed '$!d; s|~|'"${HOME}"'|; s/\s\+\[.*//g'
}

main() {
        # This script depends on the `zellij-switch` plugin to switch sessions while inside of a running zelllij session.
        [ ! -f "${ZELLIJ_SWITCH_PATH}/zellij-switch.wasm" ] && install_zellij_switch

        user_input="$*"
        session_name="${user_input:-$(get_selected_session)}"
        [ -z "${session_name}" ] && exit 1

        session_icon="$(echo "${session_name}" | sed "s/^${SESSION_ICON}.*/${SESSION_ICON}/g; s/^${DIRECTORY_ICON}.*/${DIRECTORY_ICON}/g")"
        case "${session_icon}" in
        "${DIRECTORY_ICON}") handle_dirs "${session_name#"${DIRECTORY_ICON}"}" ;;
        "${SESSION_ICON}") handle_sessions "${session_name#"${SESSION_ICON}"}" ;;
        # If this case is run, it means the user put some string on the fzf prompt in order to create a new session.
        *)
                session_name="${session_icon}"
                handle_sessions "${session_name}"
                ;;
        esac
}
main "$@"

# vim:fileencoding=utf-8:foldmethod=marker
